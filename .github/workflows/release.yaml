name: Build and Upload Release Assets

on:
  release:
    types: [created]

permissions:
  contents: write
  id-token: write

concurrency:
  group: release-builds
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go environment
        uses: actions/setup-go@v6
        with:
          go-version: stable
          cache: true

      - name: Install Snapcraft
        run: sudo snap install snapcraft --classic

      - name: Install Chocolatey
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-devel wget
          mkdir -p /opt/chocolatey
          wget -q -O - "https://github.com/chocolatey/choco/releases/download/${CHOCOLATEY_VERSION}/chocolatey.v${CHOCOLATEY_VERSION}.tar.gz" | tar -xz -C "/opt/chocolatey"
          echo '#!/bin/bash' | sudo tee /usr/local/bin/choco
          echo 'mono /opt/chocolatey/choco.exe "$@"' | sudo tee -a /usr/local/bin/choco
          sudo chmod +x /usr/local/bin/choco
          sudo mkdir -p /opt/chocolatey/lib
          choco --version
        env:
          CHOCOLATEY_VERSION: 2.5.1

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Build and release with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

      - name: Generate release summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release Tag:** \`${{ github.event.release.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL:** ${{ github.event.release.html_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Pre-release:** ${{ github.event.release.prerelease }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Success notification
        if: success()
        run: |
          echo "::notice title=Release Complete::Successfully built and published release ${{ github.event.release.tag_name }}"

      - name: Failure notification
        if: failure()
        run: |
          echo "::error title=Release Failed::Failed to complete release process for ${{ github.event.release.tag_name }}"