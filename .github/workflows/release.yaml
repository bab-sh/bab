name: Build and Upload Release Assets

on:
  release:
    types: [created]

permissions:
  contents: write

concurrency:
  group: release-builds
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go environment
        uses: actions/setup-go@v6
        with:
          go-version: stable
          cache: true

      - name: Build and release with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          DISCORD_WEBHOOK_ID: ${{DISCORD_WEBHOOK_ID}}
          DISCORD_WEBHOOK_TOKEN: ${{DISCORD_WEBHOOK_TOKEN}}

      - name: Generate release summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release Tag:** \`${{ github.event.release.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL:** ${{ github.event.release.html_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Pre-release:** ${{ github.event.release.prerelease }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Success notification
        if: success()
        run: |
          echo "::notice title=Release Complete::Successfully built and published release ${{ github.event.release.tag_name }}"

      - name: Failure notification
        if: failure()
        run: |
          echo "::error title=Release Failed::Failed to complete release process for ${{ github.event.release.tag_name }}"