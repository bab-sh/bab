#!/bin/sh
# Auto-generated from Babfile by bab - DO NOT EDIT
# https://github.com/bab/bab

set -e

# Task functions
{{range .Tasks}}
# {{.Name}}{{if .Description}} - {{.Description}}{{end}}
task_{{.SafeName}}() {
{{- range $i, $cmd := .Commands}}
    {{$cmd}}
{{- end}}
}
{{end}}

# List all available tasks
list_tasks() {
    echo ""
    echo "Available tasks:"
{{if .RootTasks}}
{{range $task := .RootTasks}}
{{if $task.Description}}
    printf "%-{{$.RootMaxNameLen}}s - %s\n" "{{$task.Name}}" "{{$task.Description}}"
{{else}}
    echo "{{$task.Name}}"
{{end}}
{{end}}
{{end}}
{{range $group, $tasks := .GroupedTasks}}
    echo "{{$group}}:"
{{$maxLen := index $.GroupMaxNameLen $group}}
{{range $task := $tasks}}
{{$shortName := trimPrefix $task.Name (printf "%s:" $group)}}
{{if $task.Description}}
    printf "  %-{{$maxLen}}s - %s\n" "{{$shortName}}" "{{$task.Description}}"
{{else}}
    echo "  {{$shortName}}"
{{end}}
{{end}}
{{end}}
    echo ""
    echo "Run './bab.sh <task>' to execute a task"
}

# Main execution
if [ $# -eq 0 ]; then
    list_tasks
    exit 0
fi

TASK_NAME="$1"
shift

case "$TASK_NAME" in
{{range .Tasks}}
    "{{.Name}}")
{{if $.NoColor}}
        echo "▶ Running task: {{.Name}}"
{{else}}
        printf "\033[36m▶\033[0m Running task: \033[1m{{.Name}}\033[0m\n"
{{end}}
        task_{{.SafeName}} "$@"
{{if $.NoColor}}
        echo "✓ Task completed: {{.Name}}"
{{else}}
        printf "\033[32m✓\033[0m Task completed: \033[1m{{.Name}}\033[0m\n"
{{end}}
        ;;
{{end}}
    *)
{{if .NoColor}}
        echo "Error: Task '$TASK_NAME' not found." >&2
{{else}}
        printf "\033[31mError:\033[0m Task '\033[1m%s\033[0m' not found.\n" "$TASK_NAME" >&2
{{end}}
        echo ""
        echo "Run './bab.sh' to see available tasks."
        exit 1
        ;;
esac
