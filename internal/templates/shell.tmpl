#!/bin/sh
# Auto-generated from Babfile by bab - DO NOT EDIT
# https://github.com/bab-sh/bab

set -e


# =============================================================================
# COLOR DEFINITIONS
# =============================================================================
{{if .NoColor}}
COLOR_CYAN=""
COLOR_GREEN=""
COLOR_RED=""
COLOR_BOLD=""
COLOR_RESET=""
SYMBOL_RUNNING=">"
SYMBOL_SUCCESS="+"
SYMBOL_ERROR="Error:"
{{else}}
COLOR_CYAN="\033[36m"
COLOR_GREEN="\033[32m"
COLOR_RED="\033[31m"
COLOR_BOLD="\033[1m"
COLOR_RESET="\033[0m"
SYMBOL_RUNNING="▶"
SYMBOL_SUCCESS="✓"
SYMBOL_ERROR="Error:"
{{end}}


# =============================================================================
# TASK FUNCTIONS
# =============================================================================
{{range .Tasks}}

# {{.Name}}{{if .Description}} - {{.Description}}{{end}}
task_{{.SafeName}}() {
{{- range $i, $cmd := .Commands}}
    {{$cmd}}
{{- end}}
}
{{end}}


# =============================================================================
# TASK LISTING
# =============================================================================

list_tasks() {
    echo ""
    echo "Available tasks:"
{{- if .RootTasks}}
{{- range $task := .RootTasks}}
{{- if $task.Description}}
    printf "%-{{$.RootMaxNameLen}}s - %s\n" "{{$task.Name}}" "{{$task.Description}}"
{{- else}}
    echo "{{$task.Name}}"
{{- end}}
{{- end}}
{{- end}}
{{- range $group, $tasks := .GroupedTasks}}
    echo "{{$group}}:"
{{- $maxLen := index $.GroupMaxNameLen $group}}
{{- range $task := $tasks}}
{{- $shortName := trimPrefix $task.Name (printf "%s:" $group)}}
{{- if $task.Description}}
    printf "  %-{{$maxLen}}s - %s\n" "{{$shortName}}" "{{$task.Description}}"
{{- else}}
    echo "  {{$shortName}}"
{{- end}}
{{- end}}
{{- end}}
    echo ""
    echo "Run './bab.sh <task>' to execute a task"
}


# =============================================================================
# MAIN EXECUTION
# =============================================================================

if [ $# -eq 0 ]; then
    list_tasks
    exit 0
fi

TASK_NAME="$1"
shift


# Task dispatcher
case "$TASK_NAME" in
{{range .Tasks}}
    "{{.Name}}")
        printf "${COLOR_CYAN}${SYMBOL_RUNNING}${COLOR_RESET} Running task: ${COLOR_BOLD}{{.Name}}${COLOR_RESET}\n"
        task_{{.SafeName}} "$@"
        printf "${COLOR_GREEN}${SYMBOL_SUCCESS}${COLOR_RESET} Task completed: ${COLOR_BOLD}{{.Name}}${COLOR_RESET}\n"
        ;;
{{end}}
    *)
        printf "${COLOR_RED}${SYMBOL_ERROR}${COLOR_RESET} Task '${COLOR_BOLD}%s${COLOR_RESET}' not found.\n" "$TASK_NAME" >&2
        echo ""
        echo "Run './bab.sh' to see available tasks."
        exit 1
        ;;
esac
